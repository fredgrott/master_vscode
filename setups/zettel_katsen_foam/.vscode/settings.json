{
  // Globals are editor.nameX whereas
  // non-global are designated via the document language selector
  // 

  

  // outline is used instead of minimap
  "editor.minimap.enabled": false,
  // Controls the indentation of wrapped lines.
  //  - none: No indentation. Wrapped lines begin at column 1.
  //  - same: Wrapped lines get the same indentation as the parent.
  //  - indent: Wrapped lines get +1 indentation toward the parent.
  //  - deepIndent: Wrapped lines get +2 indentation toward the parent.
  "editor.wrappingIndent": "indent",
  // Controls whether a border should be drawn around the overview ruler.
  "editor.overviewRulerBorder": false,
  // Controls the line height.
  //  - Use 0 to automatically compute the line height from the font size.
  //  - Values between 0 and 8 will be used as a multiplier with the font size.
  //  - Values greater than or equal to 8 will be used as effective values.
  "editor.lineHeight": 24,
  "[markdown]": {
     // Controls whether suggestions should automatically show up while typing.
    "editor.quickSuggestions": {
        "comments": "on",
        "strings": "on",
        "other": "on"
    }
  },
  // Controls whether bracket pair guides are enabled or not.
  //  - true: Enables bracket pair guides.
  //  - active: Enables bracket pair guides only for the active bracket pair.
  //  - false: Disables bracket pair guides.
  "editor.guides.bracketPairs": "active",


  // The default language identifier that is assigned to new files. If configured to `${activeEditorLanguage}`, will use the language identifier of the currently active text editor if any.
  "files.defaultLanguage": "markdown",
  // Configure glob patterns for excluding files and folders. For example, the File Explorer decides which files and folders to show or hide based on this setting. Refer to the `search.exclude` setting to define search-specific excludes.
  "files.exclude": {
    "**/node_modules": true
  },
  // Configure paths or glob patterns to exclude from file watching.
  "files.watcherExclude": {
    "**/node_modules": true
  },

  // Foam
  // https://marketplace.visualstudio.com/items?itemName=foam.foam-vscode
  // Note, this relies upon Markdown All-In-One settings
  // for wiki links, etc.
  "foam.edit.linkReferenceDefinitions": "withExtensions",
  "foam.openDailyNote.directory": "journal",
  "foam.openDailyNote.titleFormat": "fullDate",
  "foam.files.newNotePath": "currentDir",
  "foam.completion.label": "identifier",
  "foam.graph.titleMaxLength": 24,
  "foam.links.hover.enable": true,
  "foam.links.sync.enable": true,
  "foam.preview.embedNoteInContainer": true,

  // Commit all changes when there are no staged changes.
  "git.enableSmartCommit": true,
  // Run a git command after a successful commit.
  //  - none: Don't run any command after a commit.
  //  - push: Run 'git push' after a successful commit.
  //  - sync: Run 'git pull' and 'git push' after a successful commit.
  "git.postCommitCommand": "sync",

  // My twist on Foam
  // Kanbn
  // https://marketplace.visualstudio.com/items?itemName=samgiz.vscode-kanbn-boards
  //
  //
  "kanbn.showUninitialisedStatusBarItem": true,
  "kanbn.showTaskNotifications": true,
  "kanbn.showSprintButton": true,
  "kanbn.showBurndownButton": true,

  // My twist on Foam
  // Anki for VSCode
  // https://marketplace.visualstudio.com/items?itemName=jasew.anki
  //
  //
  "anki.md.createTagForTitle": true,
  "anki.api.hostname": "127.0.0.1",
  "anki.api.port": 8765,
  "anki.api.schema": "http",
  "anki.saveStrategy": "useDirStructure",
  "anki.defaultDeck": "notes",
  //--End Foam specific settings

 // VSCode Core settings, better comments
  // https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments
  "better-comments.multilineComments": true,
  "better-comments.highlightPlainText": false,
  "better-comments.tags": [
  {
    "tag": "!",
    "color": "#FF2D00",
    "strikethrough": false,
    "underline": false,
    "backgroundColor": "transparent",
    "bold": false,
    "italic": false
  },
  {
    "tag": "?",
    "color": "#3498DB",
    "strikethrough": false,
    "underline": false,
    "backgroundColor": "transparent",
    "bold": false,
    "italic": false
  },
  {
    "tag": "//",
    "color": "#474747",
    "strikethrough": true,
    "underline": false,
    "backgroundColor": "transparent",
    "bold": false,
    "italic": false
  },
  {
    "tag": "todo",
    "color": "#FF8C00",
    "strikethrough": false,
    "underline": false,
    "backgroundColor": "transparent",
    "bold": false,
    "italic": false
  },
  {
    "tag": "*",
    "color": "#98C379",
    "strikethrough": false,
    "underline": false,
    "backgroundColor": "transparent",
    "bold": false,
    "italic": false
  }
],

//TodoTree
  // https://marketplace.visualstudio.com/items?itemName=Gruntfuggly.todo-tree
  "todo-tree.highlights.defaultHighlight": {
    "icon": "alert",
    "type": "text",
    "foreground": "#FF2020",
    "background": "#C0C0C0",
    "opacity": 50,
    "iconColour": "#0000D0"
  },
  "todo-tree.highlights.customHighlight": {
    "TODO": {
      "icon": "check",
      "type": "line"
    },
    "FIXME": {
      "foreground": "#D0D0FF",
      "iconColour": "#9ACD32",
      "gutterIcon": true
    }
  },

  //--End  VSCode Core settings, todo  highlight


  // VSCode core, Markdown Lint
  // Markdown Lint
  // https://marketplace.visualstudio.com/items?itemName=DavidAnson.vscode-markdownlint
  //
  // Then to suppress is a comment block one to disable the lint rule and
  // then a end comment to re-enable the lint rule in the markdown doc
  "markdownlint.config": {
    "default": true,
    "MD003": { "style": "atx_closed" },
    "MD007": { "indent": 4 },
    "no-hard-tabs": true
  },
  "markdownlint.ignore": [
    "ignore.md",
    "directory/ignore.md",
    "**/ignore.md",
    "**/*.md"
  ],
  //--End VSCode core, Markdown Lint

  // Github Markdown Preview settings
  // for Foam and VSCode core settings
  // Markdown Mermaid
  // https://marketplace.visualstudio.com/items?itemName=bierner.markdown-mermaid
  "markdown-mermaid.lightModeTheme": "base",
  "markdown-mermaid.languages": ["mermaid"],
  // css styling for icons part of Markdown Mermaid
  "markdown.styles": [
    "https://use.fontawesome.com/releases/v5.7.1/css/all.css"
  ],
  "markdown-preview-github-styles.lightTheme": "light+high+_contrast",
  "markdown-previe-github-styles.darkTheme": "dark_high_contest",

  //--End of GitHub Markdown preview settings for Foam and
  //  VSCode core settings



  

  // VSCode core settings, GitLens
  "gitlens.codeLens.authors.enabled": true,
  "gitlens.codeLens.dateFormat": "dddd, MMMM Do YYYY, h:mm:ss a",
  "gitlens.codeLens.enabled": true,
  "gitlens.codeLens.includeSingleLineSymbols": false,
  "gitlens.codeLens.recentChange.enabled": true,
  //--End of VSCode core settings, GitLens


  // VSCode core settings, LTEx
  // Replaces languagetool
  // https://marketplace.visualstudio.com/items?itemName=valentjn.vscode-ltex
  "ltex.enabled": ["latex", "markdown"],
  "ltex.checkFrequency": "manual",
  "ltex.additionalRules.enablePickyRules": true,
  "ltex.completionEnabled": true,
  "ltex.additionalRules.motherTongue": "en-US",
  "ltex.disabledRules": {
    "en-US": ["EN_QUOTES", "UPPERCASE_SENTENCE_START"]
  },
  "ltex.markdown.nodes": {
    "CodeBlock": "ignore",
    "FencedCodeBlock": "ignore",
    "AutoLink": "dummy",
    "Code": "dummy"
  },
  "ltex.language": "en-US",
  "ltex.configurationTarget": {
    "dictionary": "workspaceFolderExternalFile",
    "disabledRules": "workspaceFolderExternalFile",
    "hiddenFalsePositives": "workspaceFolderExternalFile"
  },
  "ltex.latex.commands": {
    "\\label{}": "ignore",
    "\\documentclass[]{}": "ignore",
    "\\cite{}": "dummy",
    "\\cite[]{}": "dummy"
  },
  "languageToolLinter.languageTool.ignoredWordsInWorkspace": [
    ".posturehalfopene",
    "activitybar",
    "adaptivelayout",
    "adaptivescaffold",
    "addpostframecallback",
    "alpha-synuclein",
    "aniamtionconfiguration",
    "animatiolimiter",
    "animationconfiguration",
    "animationlimiter",
    "applocalization",
    "applocalizations",
    "applogging",
    "applysurfacetint",
    "archops",
    "asnyc",
    "assetmanifest",
    "avd",
    "bestbuy",
    "bloc",
    "bodyratio",
    "boxconstraints",
    "builtvalue",
    "cmdline",
    "codelabs",
    "codemagic",
    "codeux",
    "colorscheme",
    "const",
    "copywith",
    "corepalette",
    "crashlytics",
    "crossaxis",
    "crossaxisalignment",
    "crossmainaxis",
    "cupertinothemedata",
    "customapplocalization",
    "customapplocalizations",
    "cwd",
    "dags",
    "dartcode",
    "dartpad",
    "datasource",
    "datasources",
    "dcl",
    "debugdefaulttargetplatformoverride",
    "debugoptions",
    "debugprint",
    "designops",
    "didchangemmtric",
    "displayfeature",
    "displayfeaturestate",
    "displayfeaturetype",
    "dot-gitignore",
    "dynamiccolorbuilder",
    "dynamicscheme",
    "egcg",
    "eleavationoverlay",
    "elevationoverlay",
    "english-like",
    "enums",
    "environmentconfig",
    "errorwidget",
    "examing",
    "fakeapi",
    "flexbox",
    "foldables",
    "foldobserver",
    "formaton",
    "freezed",
    "gde'",
    "getsurfacecolor",
    "gridview",
    "hashcode",
    "hixie",
    "idx",
    "inheritedwidget",
    "intl",
    "isweb",
    "kask",
    "l-theanine",
    "licenser",
    "listdetail",
    "listdetailwidget",
    "listviews",
    "localizely",
    "logz",
    "mainaxis",
    "mainaxisalignment",
    "melos",
    "metago",
    "metaprogramming",
    "metaprogrammng",
    "midp",
    "minimap",
    "multiclip",
    "mvvm-basemodels",
    "nands",
    "navigationdrawer",
    "navigatorobserver",
    "newsurfacetheme",
    "noops",
    "noradrenalin",
    "nuc",
    "nucs",
    "oltman",
    "onerror",
    "ongneratetitle",
    "params",
    "parellels",
    "platformdispatcher",
    "podo",
    "posturehalfopened",
    "proto",
    "pubspec",
    "pumpandsettle",
    "releaseoptions",
    "renderbox",
    "repainboundry",
    "repaintboundry",
    "resetoverrides",
    "reuse",
    "rootbundle",
    "runningplatform",
    "rydmike",
    "ryzen",
    "sagi",
    "sampleitemdetailsview",
    "sampleitemlistview",
    "scrollbehaviors",
    "secondbody",
    "settingsview",
    "shouldrunanimation",
    "skia",
    "smallsecondbody",
    "snackbar",
    "squircle",
    "staggeredlist",
    "startup",
    "statusbar",
    "storyboard",
    "storyboarding",
    "stylizer",
    "subscreen",
    "surfacecolorenum",
    "symbolpath",
    "symbolsortorder",
    "targetplatform",
    "themedata",
    "titlebar",
    "toolargs",
    "triin",
    "twopane",
    "twopanebreakpoint",
    "usecase",
    "valuelistenablebuilder",
    "vscode",
    "vscode-insiders",
    "widgetapp",
    "widgetbindings",
    "widgetsbindingobserver",
    "widgetsflutterbinding",
    "xeon",
    "zettelkasten"
  ],
  // need to set this to false when using the public API services
  "languageToolLinter.lintOnChange": false,
  //--End VSCode core settings, LTex

  // VSCode core settings Read Time
  // Read Time
  // https://marketplace.visualstudio.com/items?itemName=johnpapa.read-time
  "readTime.enabled": true,
  "readTime.wordsPerMinute": 200,
  //--End VSCode core settings, LTex

  // VSCode core settings, icon themes
  // File Icon Theme
  // VSCode Icons customization goes here
  // https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons
  // Customization docs in the project wiki at
  // https://github.com/vscode-icons/vscode-icons/wiki
  "vsicons.projectDetection.autoReload": false,
  "vsicons.projectDetection.disableDetect": false,
  "workbench.iconTheme": "vscode-icons",
  // Material Product Icons
  // https://marketplace.visualstudio.com/items?itemName=PKief.material-product-icons
  "workbench.productIconTheme": "material-product-icons",
  //--End VSCode core settings, icon themes

  // VSCode core settings
  // Rewrap
  // https://marketplace.visualstudio.com/items?itemName=stkb.rewrap
  "rewrap.autoWrap.enabled": false,
  "rewrap.autoWrap.notification": "icon",
  "rewrap.doubleSentenceSpacing": false,
  "rewrap.onSave": false,
  "rewrap.reformat": false,
  "rewrap.wholeComment": true,
  "rewrap.wrappingColumn": 0,
  //--End VSCode core settings

  // VSCode core settings
  // since I use an auto save plugin this needs to be false
  "snippetsManager.autoCloseSnippetBodyEditor": false,
  //--End VSCode core settings

  // VSCode core settings
  // MetaGo
  // https://marketplace.visualstudio.com/items?itemName=metaseed.metago
  "metaGo.bookmark.saveBookmarksInProject": false,
  "metaGo.decoration.additionalSingleCharCodeCharacters": "J,D,F,L,A,H,G,I,N,R,E,M,B,Q,T,Y",
  "metaGo.decoration.backgroundColor": "#4068FF,yellow",
  "metaGo.decoration.backgroundOpacity": "0.8",
  "metaGo.decoration.borderColor": "#1e1e1e",
  "metaGo.decoration.characters": "k, j, d, f, l, s, a, h, g, i, o, n, u, r, v, c, w, e, x, m, b, p, q, t, y, z",
  "metaGo.decoration.color": "white,blue",
  "metaGo.decoration.fontSize": 16,
  "metaGo.decoration.fontWeight": "bold",
  "metaGo.decoration.height": 16,
  "metaGo.decoration.matchBackground": "editor.wordHighlightBackground",
  "metaGo.decoration.width": 8,
  "metaGo.decoration.x": 1,
  "metaGo.decoration.y": 12,
  "metaGo.decoration.useTextBasedDecorations": true,
  "metaGo.jumper.enableRippleSupportForSequentialTargetCharsCommand": true,
  "metaGo.jumper.timeout": 9,
  //--End VSCode core settings

  // VSCode core settings
  "multiclip.bufferSize": 10,
  "multiclip.formatAfterPaste": false,
  //--End VSCode core settings

  // VSCode Core settings
  // Explicit folding
  // https://marketplace.visualstudio.com/items?itemName=zokugun.explicit-folding
  "editor.foldingStrategy": "auto",
  "editor.defaultFoldingRangeProvider": "zokugun.explicit-folding",
  "explicitFolding.rules": {
     "*": {
        "begin": "{{{",
        "end": "}}}"
     }
   },
  "[javascriptreact]": {
      "explicitFolding.rules": [
        {
            "begin": "{/*",
            "end": "*/}"
        },
        {
            "begin": "<",
            "end": "/>"
        }
      ]
   },
  //--End of VSCode core settings

  
  // VSCode core settings
  // Controls whether and how file paths are shown in the breadcrumbs view.
  //  - on: Show the file path in the breadcrumbs view.
  //  - off: Do not show the file path in the breadcrumbs view.
  //  - last: Only show the last element of the file path in the breadcrumbs view.
  "breadcrumbs.filePath": "last",
  // Controls whether and how symbols are shown in the breadcrumbs view.
  //  - on: Show all symbols in the breadcrumbs view.
  //  - off: Do not show symbols in the breadcrumbs view.
  //  - last: Only show the current symbol in the breadcrumbs view.
  "breadcrumbs.symbolPath": "last",
  // Controls how symbols are sorted in the breadcrumbs outline view.
  //  - position: Show symbol outline in file position order.
  //  - name: Show symbol outline in alphabetical order.
  //  - type: Show symbol outline in symbol type order.
  "breadcrumbs.symbolSortOrder": "name",
  //--End of VSCode core settings

  // Foam settings for Markdown Links
  // https://marketplace.visualstudio.com/items?itemName=tchayen.markdown-links
  "markdown-links.showColumn": "beside",
  "markdown-links.autoStart": false,
  "markdown-links.fileIdRegexp": "\\d{14}",
  "markdown-links.graphType": "obsidian",
  "markdown-links.openColumn": "one",
  //--End Foam settings for Markdown links






  "markdown.preview.breaks": true,
  // Controls the font size in pixels used in the Markdown preview.
  "markdown.preview.fontSize": 16,
  // Controls the line height used in the Markdown preview. This number is relative to the font size.
  "markdown.preview.lineHeight": 1.6,
  
  // Markdown All-In-One settings shared between Foam
  // and VSCode core settings
  // Markdown All-In-One
  // https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one
  // whether or not to show the preview to the side automatically
  "markdown.extension.preview.autoShowPreviewToSide": false,
  "markdown.extension.bold.indicator": "**",
  "markdown.extension.completion.respectVscodeSearchExclude": true,
  "markdown.extension.italic.indicator": "_",
  "markdown.extension.list.indentationSize": "adaptive",
  "markdown.extension.list.toggle.candidate-markers": [
    "-",
    "*",
    "+",
    "1.",
    "1)"
  ],
  "markdown.extension.orderedList.autoRenumber": true,
  "markdown.extension.orderedList.marker": "one",
  "markdown.extension.print.absoluteImgPath": true,
  "markdown.extension.print.imgToBase64": false,
  "markdown.extension.print.includeVscodeStylesheets": true,
  "markdown.extension.print.theme": "dark",
  "markdown.extension.syntax.decorationFileSizeLimit": 50000,
  "markdown.extension.syntax.plainTheme": false,
  "markdown.extension.print.validateUrls": true,
  "markdown.extension.tableFormatter.delimiterRowNoPadding": false,
  "markdown.extension.tableFormatter.enabled": true,
  "markdown.extension.tableFormatter.normalizeIndentation": false,
  "markdown.extension.toc.levels": "1..6",
  "markdown.extension.toc.omittedFromToc": { "README.md": ["# Introduction"] },
  "markdown.extension.toc.orderedList": false,
  "markdown.extension.toc.plaintext": false,
  "markdown.extension.toc.slugifyMode": "github",
  "markdown.extension.toc.unorderedList.marker": "+",
  "markdown.extension.toc.updateOnSave": true,
  //--End of Markdown All-In-One shared between Foam and



    // one keeps window.autoDetectColorScheme
    // to be able to switch between light and dark
    // themes
    // Theme choices should be a set of themes that is
    // constantly updated with VSCode API changes as to
    // avoid manually having to customize them.
    "workbench.preferredDarkColorTheme": "Noctis",
    "workbench.preferredLightColorTheme": "Noctis Lux",
    "window.autoDetectColorScheme": true,
    "editor.fontFamily": "Roboto",
    "editor.fontSize": 18,
     "workbench.colorTheme": "Noctis",


//Codesnap
 //"easy-condesnap.backgroundColor": "",
 //"easy-codesnap.boxShadow": "",
 "easy-codesnap.conainerPadding": "15",
 "easy-codesnap.roundedCorners": true,
 "easy-codesnap.showWindowControls": true,
 "easy-codesnap.showWindowTitle": true,
 "easy-codesnap.windowTitleTemplate": "{workspace}-{filename}",
 "easy-codesnap.showLineNumbers": true,
 "easy-codesnap.realLineNumbers": true,
 "easy-codesnap.transparentBackground": true,
 "easy-codesnap.target": "window",
 "easy-codesnap.windowStyle": "macos",
 "easy-codesnap.shutterAction": "save",
 "easy-cdesnap.saveFormat": "png",
 "easy-codesnap.enableResizing": true,
 "easy-codesnap.roundingLevel": 1,
 // for container only
 //"easy-codesnap.aspect-ratio":
 "easy-codesnap.lockOnOpen": true,
 "easy-codesnap.linkOnOpen": true,

"licenser.license": "BSD3",
"licenser.author": "Fredrick Allan Hrott",


 //docs view
//https://marketplace.visualstudio.com/items?itemName=bierner.docs-view
 "docsView.documentationView.updateMode": "live",

"githubPullRequests.queries": [
	{
		"label": "Waiting For My Review",
		"query": "is:open review-requested:${user}"
	},
	{
		"label": "Assigned To Me",
		"query": "is:open assignee:${user}"
	},
	{
		"label": "Created By Me",
		"query": "is:open author:${user}"
	},
	{
		"label": "Mentioned Me",
		"query": "is:open mentions:${user}"
	}
]



  //  VSCode core settings




  // Paste Image
  // https://marketplace.visualstudio.com/items?itemName=mushan.vscode-paste-image
  "pasteImage.path": "${projectRoot}/attachments",
  "pasteImage.showFilePathConfirmInputBox": true,

  // Prettier
  // https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode
  // Note, formatters are always fully configured via
  // the language selector blocks per language
  "prettier.singleQuote": false,

  "editor.tokenColorCustomizations": { 
    // see:
      // https://code.visualstudio.com/api/language-extensions/syntax-highlight-guide
      "textMateRules": [
        {
         "scope": [
           "comment.block",
           "punctuation.definition.comment.end",
           "punctuation.definition.comment.begin"
         ],
         "settings": {
           "foreground": "#85b3f8",
           "fontStyle": "bold"
         }
        },
        {
          "scope": [
            "comment.block.documentation",
            "comment.block.dartcode.dart",
           "punctuation.definition.comment.begin.documentation",
           "punctuation.definition.comment.end.documentation"
          ],
          "settings": {
            "foreground": "#6bddb7",
            "fontStyle": "bold"
          }
        },
        {
         "scope":["comment.line",
           "punctuation.definition.comment"],
           "settings": {
             "foreground": "#00a2ff",
             "fontStyle": "bold"
            }
       },
      ],

   },


    

}